{cookie,bench_cookie}.
{generator_profile,async_ec}.
{statistics_detail,debug}.
{generator_warmup,12000}.
{generator_duration,  		90000}.
{generator_cooldown,  		12000}.
{generator_nodes,         	
 ['bench1@vincent-pc',
    'bench2@vincent-pc'
 ]}.
{use_binary_subscriber_key, 	false}.
{n_generators_per_node, 	2}.
{write_lock_type,		sticky_write}.
{table_nodes,         	
 ['bench1@vincent-pc',
  'bench2@vincent-pc',
  'bench3@vincent-pc',
  'bench4@vincent-pc',
  'bench5@vincent-pc'
 ]}.
{storage_type, 			ram_copies}.
{n_replicas,   			5}.
{n_fragments,  			1}.
{n_subscribers,		        50000}.
{n_groups,     		        100}.
{n_servers,    		        20}.


bench(142):                   Starting Mnesia... ok
bench_populate(40):
bench_populate(41):           Populate database...
bench_populate(42):
bench_populate(64):               Delete old tables...
bench_populate(72):               Creating ram_copies tables, with 5 replicas distributed over 5 nodes...
bench_populate(52):               Populate database in async mode...
bench_populate(178):              Populate 50000 subscribers...
(bench@vincent-pc)1>  totally 0 bytes
bench_populate(208):              Populate 100 groups... totally 0 bytes
bench_populate(247):              Populate 20 servers with 100 records each... totally 0 bytes
bench_generate(61):
bench_generate(62):           Start 2 request generators each at 2 nodes...
bench_generate(63):
bench_generate(65):               12 seconds warmup...
bench_generate(92):               90 seconds actual benchmarking...
bench_generate(98):               12 seconds cooldown...
bench_generate(595):
bench_generate(596):          Benchmark result...
bench_generate(597):
bench_generate(605):              35906 asyncs per second (TPS).
bench_generate(606):              7181 asyncPS per table node.
bench_generate(608):              async micro seconds in average per 111, including latency.
bench_generate(610):              3183137 async. 1.498077% generator overhead.
bench_generate(618):
bench_generate(619):          Statistics per async type...
bench_generate(620):
bench_generate(664):              t1......................... n=100.0000%       time=100.0000%  avg micros=111
bench_generate(623):
bench_generate(624):          async statistics per table node...
bench_generate(625):
bench_generate(655):              'bench1@vincent-pc'........ n= 49.9709%       time= 50.0125%
bench_generate(655):              'bench2@vincent-pc'........ n= 50.0291%       time= 49.9875%
bench_generate(628):
bench_generate(629):          async statistics per generator node...
bench_generate(630):
bench_generate(655):              'bench1@vincent-pc'........ n= 49.9709%       time= 50.0125%
bench_generate(655):              'bench2@vincent-pc'........ n= 50.0291%       time= 49.9875%
bench(206):
bench(207):                   Stopping Erlang nodes...
bench(208):
bench(212):                       'bench2@vincent-pc'........ ok
bench(212):                       'bench1@vincent-pc'........ ok
bench(212):                       'bench5@vincent-pc'........=WARNING REPORT==== 20-Mar-2023::20:39:55.180588 ===
'global' at node 'bench4@vincent-pc' requested disconnect from node 'bench2@vincent-pc' in order to prevent overlapping partitions
 ok
bench(212):                       'bench4@vincent-pc'........ ok
bench(212):                       'bench3@vincent-pc'........ ok




{cookie,bench_cookie}.
{generator_profile,async_ec}.
{statistics_detail,debug}.
{generator_warmup,12000}.
{generator_duration,  		90000}.
{generator_cooldown,  		12000}.
{generator_nodes,         	
 ['bench1@vincent-pc',
    'bench2@vincent-pc'
 ]}.
{use_binary_subscriber_key, 	false}.
{n_generators_per_node, 	2}.
{write_lock_type,		sticky_write}.
{table_nodes,         	
 ['bench1@vincent-pc',
  'bench2@vincent-pc',
  'bench3@vincent-pc'
 ]}.
{storage_type, 			ram_copies}.
{n_replicas,   			3}.
{n_fragments,  			1}.
{n_subscribers,		        5000}.
{n_groups,     		        100}.
{n_servers,    		        20}.


started
bench(141):
bench(142):                   Starting Mnesia... ok
bench_populate(40):
bench_populate(41):           Populate database...
bench_populate(42):
bench_populate(64):               Delete old tables...
bench_populate(72):               Creating ram_copies tables, with 3 replicas distributed over 3 nodes...
bench_populate(52):               Populate database in async mode...
bench_populate(178):              Populate 5000 subscribers... totally 0 bytes
bench_populate(208):              Populate 100 groups... totally 0 bytes
bench_populate(247):              Populate 20 servers with 100 records each... totally 0 bytes
bench_generate(61):
bench_generate(62):           Start 2 request generators each at 2 nodes...
bench_generate(63):
bench_generate(65):               12 seconds warmup...
bench_generate(92):               90 seconds actual benchmarking...
bench_generate(98):               12 seconds cooldown...
bench_generate(595):
bench_generate(596):          Benchmark result...
bench_generate(597):
bench_generate(605):              49893 asyncs per second (TPS).
bench_generate(606):              16631 asyncPS per table node.
bench_generate(608):              async micro seconds in average per 80, including latency.
bench_generate(610):              4397028 async. 2.079522% generator overhead.
bench_generate(618):
bench_generate(619):          Statistics per async type...
bench_generate(620):
bench_generate(664):              t1......................... n=100.0000%       time=100.0000%  avg micros=80
bench_generate(623):
bench_generate(624):          async statistics per table node...
bench_generate(625):
bench_generate(655):              'bench1@vincent-pc'........ n= 49.6344%       time= 50.0103%
bench_generate(655):              'bench2@vincent-pc'........ n= 50.3656%       time= 49.9897%
bench_generate(628):
bench_generate(629):          async statistics per generator node...
bench_generate(630):
bench_generate(655):              'bench1@vincent-pc'........ n= 49.6344%       time= 50.0103%
bench_generate(655):              'bench2@vincent-pc'........ n= 50.3656%       time= 49.9897%
bench(206):
bench(207):                   Stopping Erlang nodes...
bench(208):
bench(212):                       'bench2@vincent-pc'........ ok
bench(212):                       'bench1@vincent-pc'........ ok
bench(212):                       'bench3@vincent-pc'........ ok



{cookie,bench_cookie}.
{generator_profile,async_ec}.
{statistics_detail,debug}.
{generator_warmup,12000}.
{generator_duration,  		90000}.
{generator_cooldown,  		12000}.
{generator_nodes,         	
 ['bench1@vincent-pc',
    'bench2@vincent-pc'
 ]}.
{use_binary_subscriber_key, 	false}.
{n_generators_per_node, 	2}.
{write_lock_type,		sticky_write}.
{table_nodes,         	
 ['bench1@vincent-pc',
  'bench2@vincent-pc',
  'bench3@vincent-pc'
 ]}.
{storage_type, 			ram_copies}.
{n_replicas,   			3}.
{n_fragments,  			1}.
{n_subscribers,		        500000}.
{n_groups,     		        100}.
{n_servers,    		        20}.
 


 started
bench(141):
bench(142):                   Starting Mnesia... ok
bench_populate(40):
bench_populate(41):           Populate database...
bench_populate(42):
bench_populate(64):               Delete old tables...
bench_populate(72):               Creating ram_copies tables, with 3 replicas distributed over 3 nodes...
bench_populate(52):               Populate database in async mode...
bench_populate(178):              Populate 500000 subscribers... totally 0 bytes
bench_populate(208):              Populate 100 groups... totally 0 bytes
bench_populate(247):              Populate 20 servers with 100 records each... totally 0 bytes
bench_generate(61):
bench_generate(62):           Start 2 request generators each at 2 nodes...
bench_generate(63):
bench_generate(65):               12 seconds warmup...
bench_generate(92):               90 seconds actual benchmarking...
bench_generate(98):               12 seconds cooldown...
bench_generate(595):
bench_generate(596):          Benchmark result...
bench_generate(597):
bench_generate(605):              48528 asyncs per second (TPS).
bench_generate(606):              16176 asyncPS per table node.
bench_generate(608):              async micro seconds in average per 82, including latency.
bench_generate(610):              4278325 async. 2.043458% generator overhead.
bench_generate(618):
bench_generate(619):          Statistics per async type...
bench_generate(620):
bench_generate(664):              t1......................... n=100.0000%       time=100.0000%  avg micros=82
bench_generate(623):
bench_generate(624):          async statistics per table node...
bench_generate(625):
bench_generate(655):              'bench1@vincent-pc'........ n= 48.9485%       time= 50.0245%
bench_generate(655):              'bench2@vincent-pc'........ n= 51.0515%       time= 49.9755%
bench_generate(628):
bench_generate(629):          async statistics per generator node...
bench_generate(630):
bench_generate(655):              'bench1@vincent-pc'........ n= 48.9485%       time= 50.0245%
bench_generate(655):              'bench2@vincent-pc'........ n= 51.0515%       time= 49.9755%
bench(206):
bench(207):                   Stopping Erlang nodes...
bench(208):
bench(212):                       'bench2@vincent-pc'........ ok
bench(212):                       'bench1@vincent-pc'........ ok
bench(212):                       'bench3@vincent-pc'........ ok
 





 
{cookie,bench_cookie}.
{generator_profile,async_ec}.
{statistics_detail,debug}.
{generator_warmup,12000}.
{generator_duration,  		90000}.
{generator_cooldown,  		12000}.
{generator_nodes,         	
 ['bench1@vincent-pc',
    'bench2@vincent-pc'
 ]}.
{use_binary_subscriber_key, 	false}.
{n_generators_per_node, 	2}.
{write_lock_type,		sticky_write}.
{table_nodes,         	
 ['bench1@vincent-pc',
  'bench2@vincent-pc',
  'bench3@vincent-pc'
 ]}.
{storage_type, 			ram_copies}.
{n_replicas,   			3}.
{n_fragments,  			1}.
{n_subscribers,		        50000}.
{n_groups,     		        100}.
{n_servers,    		        20}.


 started
bench(141):
bench(142):                   Starting Mnesia... ok
bench_populate(40):
bench_populate(41):           Populate database...
bench_populate(42):
bench_populate(64):               Delete old tables...
bench_populate(72):               Creating ram_copies tables, with 3 replicas distributed over 3 nodes...
bench_populate(52):               Populate database in async mode...
bench_populate(178):              Populate 50000 subscribers... totally 0 bytes
bench_populate(208):              Populate 100 groups... totally 0 bytes
bench_populate(247):              Populate 20 servers with 100 records each... totally 0 bytes
bench_generate(61):
bench_generate(62):           Start 2 request generators each at 2 nodes...
bench_generate(63):
bench_generate(65):               12 seconds warmup...
bench_generate(92):               90 seconds actual benchmarking...
bench_generate(98):               12 seconds cooldown...
bench_generate(595):
bench_generate(596):          Benchmark result...
bench_generate(597):
bench_generate(605):              48936 asyncs per second (TPS).
bench_generate(606):              16312 asyncPS per table node.
bench_generate(608):              async micro seconds in average per 81, including latency.
bench_generate(610):              4313601 async. 2.058251% generator overhead.
bench_generate(618):
bench_generate(619):          Statistics per async type...
bench_generate(620):
bench_generate(664):              t1......................... n=100.0000%       time=100.0000%  avg micros=81
bench_generate(623):
bench_generate(624):          async statistics per table node...
bench_generate(625):
bench_generate(655):              'bench1@vincent-pc'........ n= 49.2982%       time= 50.0348%
bench_generate(655):              'bench2@vincent-pc'........ n= 50.7018%       time= 49.9652%
bench_generate(628):
bench_generate(629):          async statistics per generator node...
bench_generate(630):
bench_generate(655):              'bench1@vincent-pc'........ n= 49.2982%       time= 50.0348%
bench_generate(655):              'bench2@vincent-pc'........ n= 50.7018%       time= 49.9652%
bench(206):
bench(207):                   Stopping Erlang nodes...
bench(208):
bench(212):                       'bench2@vincent-pc'........ ok
bench(212):                       'bench1@vincent-pc'........=WARNING REPORT==== 20-Mar-2023::16:51:58.914182 ===
'global' at node 'bench3@vincent-pc' requested disconnect from node 'bench2@vincent-pc' in order to prevent overlapping partitions
 ok
bench(212):                       'bench3@vincent-pc'........ ok
+ shift
+ [ 0 -gt 0 ]

================================================================================




{cookie,bench_cookie}.
{generator_profile,async_ec}.
{statistics_detail,debug}.
{generator_warmup,12000}.
{generator_duration,  		90000}.
{generator_cooldown,  		12000}.
{generator_nodes,         	
 ['bench1@vincent-pc',
    'bench2@vincent-pc'
 ]}.
{use_binary_subscriber_key, 	false}.
{n_generators_per_node, 	2}.
{write_lock_type,		sticky_write}.
{table_nodes,         	
 ['bench1@vincent-pc',
  'bench2@vincent-pc',
  'bench3@vincent-pc'
 ]}.
{storage_type, 			ram_copies}.
{n_replicas,   			3}.
{n_fragments,  			1}.
{n_subscribers,		        50000}.
{n_groups,     		        100}.
{n_servers,    		        20}.



bench_generate(595):
bench_generate(596):          Benchmark result...
bench_generate(597):
bench_generate(605):              51914 asyncs per second (TPS).
bench_generate(606):              17304 asyncPS per table node.
bench_generate(608):              async micro seconds in average per 77, including latency.
bench_generate(610):              4571318 async. 2.160739% generator overhead.
bench_generate(618):
bench_generate(619):          Statistics per async type...
bench_generate(620):
bench_generate(664):              t1......................... n=100.0000%       time=100.0000%  avg micros=77
bench_generate(623):
bench_generate(624):          async statistics per table node...
bench_generate(625):
bench_generate(655):              'bench1@vincent-pc'........ n= 54.4383%       time= 49.9272%
bench_generate(655):              'bench2@vincent-pc'........ n= 45.5617%       time= 50.0728%
bench_generate(628):
bench_generate(629):          async statistics per generator node...
bench_generate(630):
bench_generate(655):              'bench1@vincent-pc'........ n= 54.4383%       time= 49.9272%
bench_generate(655):              'bench2@vincent-pc'........ n= 45.5617%       time= 50.0728%
bench(206):
bench(207):                   Stopping Erlang nodes...
bench(208):
bench(212):                       'bench2@vincent-pc'........ ok
bench(212):                       'bench1@vincent-pc'........=WARNING REPORT==== 20-Mar-2023::16:16:23.080295 ===
'global' at node 'bench3@vincent-pc' requested disconnect from node 'bench2@vincent-pc' in order to prevent overlapping partitions
 ok
bench(212):                       'bench3@vincent-pc'........ ok




================================================================================







 
{cookie,bench_cookie}.
{generator_profile,t1}.
{statistics_detail,debug}.
{generator_warmup,12000}.
{generator_duration,  		90000}.
{generator_cooldown,  		12000}.
{generator_nodes,         	
 ['bench1@vincent-pc',
    'bench2@vincent-pc'
 ]}.
{use_binary_subscriber_key, 	false}.
{n_generators_per_node, 	2}.
{write_lock_type,		sticky_write}.
{table_nodes,         	
 ['bench1@vincent-pc',
  'bench2@vincent-pc',
  'bench3@vincent-pc',
  'bench4@vincent-pc',
  'bench5@vincent-pc'
 ]}.
{storage_type, 			ram_copies}.
{n_replicas,   			5}.
{n_fragments,  			1}.
{n_subscribers,		        5000}.
{n_groups,     		        100}.
{n_servers,    		        20}.


 started
bench(140):
bench(141):                   Starting Mnesia... ok
bench_populate(40):
bench_populate(41):           Populate database...
bench_populate(42):
bench_populate(120):              Delete old tables...
bench_populate(128):              Creating ram_copies tables, with 5 replicas distributed over 5 nodes...
bench_populate(55):               Populate database in sync mode...
bench_populate(178):              Populate 5000 subscribers... totally 446852 bytes
bench_populate(208):              Populate 100 groups... totally 7228 bytes
bench_populate(247):              Populate 20 servers with 100 records each... totally 162468 bytes
bench_generate(61):
bench_generate(62):           Start 2 request generators each at 2 nodes...
bench_generate(63):
bench_generate(65):               12 seconds warmup...
bench_generate(92):               90 seconds actual benchmarking...
bench_generate(98):               12 seconds cooldown...
bench_generate(589):
bench_generate(590):          Benchmark result...
bench_generate(591):
bench_generate(599):              4698 transactions per second (TPS).
bench_generate(600):              939 transactionPS per table node.
bench_generate(602):              transaction micro seconds in average per 851, including latency.
bench_generate(604):              421970 transaction. 0.212133% generator overhead.
bench_generate(612):
bench_generate(613):          Statistics per transaction type...
bench_generate(614):
bench_generate(658):              t1......................... n=100.0000%       time=100.0000%  avg micros=851
bench_generate(617):
bench_generate(618):          transaction statistics per table node...
bench_generate(619):
bench_generate(649):              'bench1@vincent-pc'........ n= 50.1000%       time= 50.0029%
bench_generate(649):              'bench2@vincent-pc'........ n= 49.9000%       time= 49.9971%
bench_generate(622):
bench_generate(623):          transaction statistics per generator node...
bench_generate(624):
bench_generate(649):              'bench1@vincent-pc'........ n= 50.1000%       time= 50.0029%
bench_generate(649):              'bench2@vincent-pc'........ n= 49.9000%       time= 49.9971%
bench(206):
bench(207):                 


ench_generate(595):
bench_generate(596):          Benchmark result...
bench_generate(597):
bench_generate(605):              36335 asyncs per second (TPS).
bench_generate(606):              7267 asyncPS per table node.
bench_generate(608):              async micro seconds in average per 110, including latency.
bench_generate(610):              3221549 async. 1.487653% generator overhead.
bench_generate(618):
bench_generate(619):          Statistics per async type...
bench_generate(620):
bench_generate(664):              t1......................... n=100.0000%       time=100.0000%  avg micros=110
bench_generate(623):
bench_generate(624):          async statistics per table node...
bench_generate(625):
bench_generate(655):              'bench1@vincent-pc'........ n= 50.0200%       time= 50.0047%
bench_generate(655):              'bench2@vincent-pc'........ n= 49.9800%       time= 49.9953%
bench_generate(628):
bench_generate(629):          async statistics per generator node...
bench_generate(630):
bench_generate(655):              'bench1@vincent-pc'........ n= 50.0200%       time= 50.0047%
bench_generate(655):              'bench2@vincent-pc'........ n= 49.9800%       time= 49.9953%
bench(206):
bench(207):                   Stopping Erlang nodes...
bench(208):



================================================================================

{cookie,bench_cookie}.
{generator_profile,async_ec}.
{statistics_detail,debug}.
{generator_warmup,12000}.
{generator_duration,  		90000}.
{generator_cooldown,  		12000}.
{generator_nodes,         	
 ['bench1@vincent-pc',
    'bench2@vincent-pc'
 ]}.
{use_binary_subscriber_key, 	false}.
{n_generators_per_node, 	2}.
{write_lock_type,		sticky_write}.
{table_nodes,         	
 ['bench1@vincent-pc',
  'bench2@vincent-pc',
  'bench3@vincent-pc'
 ]}.
{storage_type, 			ram_copies}.
{n_replicas,   			3}.
{n_fragments,  			1}.
{n_subscribers,		        5000}.
{n_groups,     		        100}.
{n_servers,    		        20}.



bench_generate(596):          Benchmark result...
bench_generate(597):
bench_generate(605):              50766 asyncs per second (TPS).
bench_generate(606):              16922 asyncPS per table node.
bench_generate(608):              async micro seconds in average per 78, including latency.
bench_generate(610):              4472564 async. 2.110709% generator overhead.
bench_generate(618):
bench_generate(619):          Statistics per async type...
bench_generate(620):
bench_generate(664):              t1......................... n=100.0000%       time=100.0000%  avg micros=78
bench_generate(623):
bench_generate(624):          async statistics per table node...
bench_generate(625):
bench_generate(655):              'bench1@vincent-pc'........ n= 48.8908%       time= 50.0231%
bench_generate(655):              'bench2@vincent-pc'........ n= 51.1092%       time= 49.9769%
bench_generate(628):
bench_generate(629):          async statistics per generator node...
bench_generate(630):
bench_generate(655):              'bench1@vincent-pc'........ n= 48.8908%       time= 50.0231%
bench_generate(655):              'bench2@vincent-pc'........ n= 51.1092%       time= 49.9769%
bench(206):
bench(207):                   Stopping Erlang nodes...
bench(208):
bench(212):                       'bench2@vincent-pc'........ ok
bench(212):                       'bench1@vincent-pc'........=WARNING REPORT==== 28-Feb-2023::22:36:12.522729 ===
'global' at node 'bench3@vincent-pc' requested disconnect from node 'bench2@vincent-pc' in order to prevent overlapping partitions
 ok
bench(212):                       'bench3@vincent-pc'........ ok
+ shift




================================================================================

{cookie,bench_cookie}.
{generator_profile,async_ec}.
{statistics_detail,debug}.
{generator_warmup,12000}.
{generator_duration,  		90000}.
{generator_cooldown,  		12000}.
{generator_nodes,         	
 ['bench1@vincent-pc',
    'bench2@vincent-pc'
 ]}.
{use_binary_subscriber_key, 	false}.
{n_generators_per_node, 	2}.
{write_lock_type,		sticky_write}.
{table_nodes,         	
 ['bench1@vincent-pc',
  'bench2@vincent-pc',
  'bench3@vincent-pc',
  'bench4@vincent-pc',
  'bench5@vincent-pc',
  'bench6@vincent-pc',
  'bench7@vincent-pc'
 ]}.
{storage_type, 			ram_copies}.
{n_replicas,   			7}.
{n_fragments,  			1}.
{n_subscribers,		        5000}.
{n_groups,     		        100}.
{n_servers,    		        20}.


bench_generate(597):
bench_generate(605):              25609 asyncs per second (TPS).
bench_generate(606):              3658 asyncPS per table node.
bench_generate(608):              async micro seconds in average per 156, including latency.
bench_generate(610):              2281255 async. 1.024457% generator overhead.
bench_generate(618):
bench_generate(619):          Statistics per async type...
bench_generate(620):
bench_generate(664):              t1......................... n=100.0000%       time=100.0000%  avg micros=156
bench_generate(623):
bench_generate(624):          async statistics per table node...
bench_generate(625):
bench_generate(655):              'bench1@vincent-pc'........ n= 49.9913%       time= 49.9965%
bench_generate(655):              'bench2@vincent-pc'........ n= 50.0087%       time= 50.0035%
bench_generate(628):
bench_generate(629):          async statistics per generator node...
bench_generate(630):
bench_generate(655):              'bench1@vincent-pc'........ n= 49.9913%       time= 49.9965%
bench_generate(655):              'bench2@vincent-pc'........ n= 50.0087%       time= 50.0035%
bench(206):
bench(207):                   Stopping Erlang nodes...
bench(208):
bench(212):                       'bench2@vincent-pc'........ ok
bench(212):                       'bench1@vincent-pc'........ ok
bench(212):                       'bench7@vincent-pc'........ ok
